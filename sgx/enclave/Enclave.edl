// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

enclave {
from "sgx_asyncio.edl" import *;
from "sgx_backtrace.edl" import *;
from "sgx_env.edl" import *;
from "sgx_fd.edl" import *;
from "sgx_file.edl" import *;
from "sgx_fs.edl" import *;
from "sgx_mem.edl" import *;
from "sgx_net.edl" import *;
from "sgx_pipe.edl" import *;
from "sgx_process.edl" import *;
from "sgx_socket.edl" import *;
from "sgx_stdio.edl" import *;
from "sgx_sys.edl" import *;
from "sgx_thread.edl" import *;
from "sgx_time.edl" import *;
from "sgx_tstd.edl" import *;
from "sgx_tprotected_fs.edl" import *;

    trusted {
        /* define ECALLs here. */

        public sgx_status_t build_index([in, size=len] const uint8_t* some_string, size_t len);
        public sgx_status_t delete_index([in, size=len] const uint8_t* some_string, size_t len);
        public sgx_status_t commit();
        public sgx_status_t do_query([in, size=len] const uint8_t* some_string, size_t len, 
                                        [out, size=result_max_len]uint8_t * encrypted_result_string, 
                                        size_t result_max_len );
        public sgx_status_t get_origin_by_id([in, size=some_len]uint8_t * some_string, size_t some_len, 
                                        [out, size=result_max_len]uint8_t * encrypted_result_string, 
                                        size_t result_max_len );
        public sgx_status_t server_hello([out, size=result_max_len] uint8_t* pk_n, size_t pk_n_len,
                                        [out, size=result_max_len] uint8_t* pk_e, size_t pk_e_len,
                                        [out, size=result_max_len] uint8_t* certficate, size_t certficate_len,
                                        size_t result_max_len );
        public sgx_status_t user_register(
            [in, size=enc_user_pswd_len] uint8_t* enc_user_pswd, 
            size_t enc_user_pswd_len, 
            [out, size=result_max_len] uint8_t* usera, 
            size_t usera_len, 
            [out, size=result_max_len] uint8_t* enc_pswd, 
            size_t enc_pswd_len, 
            size_t result_max_len
        );                             
        public sgx_status_t get_session_key([in, size=user_len] const uint8_t* user, size_t user_len, 
                                        [in, size=enc_sessionkey_len] const uint8_t* enc_sessionkey, 
                                        size_t enc_sessionkey_len );    
        public sgx_status_t enclave_test();

                            
    };
};
